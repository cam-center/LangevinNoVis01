name: CD
on:
  release:
    types: [published, edited]

jobs:
  CD:
    name: Langevin on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: setup graalvm for static build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: 'native-image'
          native-image-musl: 'true'
          native-image-job-reports: 'true'
        if: matrix.os == 'ubuntu-latest'

      - name: setup graalvm for non-static build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
        if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'

      - name: static build and test native solver - linux only  # https://graalvm.github.io/native-build-tools/latest/maven-plugin.html
        run: mvn -Pnative-static -DskipTests package
        if: matrix.os == 'ubuntu-latest'

      - name: non-static build and test native solver  # https://graalvm.github.io/native-build-tools/latest/maven-plugin.html
        run: mvn -Pnative -DskipTests package
        if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'

      - name: Upload MacOS or Linux solver binary to release assets
        if: github.event_name == 'release' && (matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/langevin
          asset_name: langevin-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - name: Upload Windows solver binary to release assets
        if: github.event_name == 'release' && matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/langevin.exe
          asset_name: langevin-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
